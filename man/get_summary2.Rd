% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ols-summary.R
\name{get_summary2}
\alias{get_summary2}
\title{Get the tidy variance summary from a fitted OLS \code{maars_lm, lm}
class object}
\usage{
get_summary2(
  mod_fit,
  sand = TRUE,
  boot_emp = FALSE,
  boot_mul = FALSE,
  boot_res = FALSE,
  well_specified = FALSE,
  tidy = TRUE
)
}
\arguments{
\item{mod_fit}{(maars_lm, lm) A fitted OLS \code{maars_lm, lm} class object}

\item{sand}{(logical) : \code{TRUE} if sandwich estimator output is required,
\code{FALSE} to exclude this output from the request}

\item{boot_emp}{(logical) : \code{TRUE} if empirical bootstrap standard error
output is required, \code{FALSE} to exclude this output from the request}

\item{boot_mul}{(logical) : \code{TRUE} if multiplier bootstrap standard error
output is required, \code{FALSE} to exclude this output from the request}

\item{boot_res}{(logical) : \code{TRUE} if residual bootstrap standard error
output is required, \code{FALSE} to exclude this output from the request}

\item{well_specified}{(logical) : \code{TRUE} if lm standard errors
(well specified) output is required, \code{FALSE} to exclude this output
from the request}

\item{tidy}{(logical) : \code{TRUE} if user requires a
\code{\link[broom]{tidy}} style variance summary, \code{FALSE} if the user
requires the compressed variance summary joined by the common
"term", "estimate" values for the OLS fit. In this output each variance
type has the required standard error term as a separate column with the
variance type abbreviation as the suffix. That is, for sandwich estimator
the 'p.value' column is renamed to 'p.value.sand'.}
}
\value{
(tibble) : Combined standard error summary from a fitted
OLS \code{maars_lm, lm} class object
}
\description{
Get the tidy variance summary from a fitted OLS \code{maars_lm, lm}
class object
}
\examples{
\dontrun{
set.seed(1243434)

# generate data
n <- 1e3
X_1 <- stats::rnorm(n, 0, 1)
X_2 <- stats::rnorm(n, 10, 20)
eps <- stats::rnorm(n, 0, 1)

# OLS data and model
y <- 2 + X_1 * 1 + X_2 * 5 + eps
lm_fit <- stats::lm(y ~ X_1 + X_2)

# DEFINE common column names - these stay the same across all
# reported error types
common_vars <- c("term", "estimate")

# Empirical Bootstrap check
set.seed(454354534)
comp_var1 <- comp_var(
  mod_fit = lm_fit, boot_emp = list(B = 20, m = 200),
  boot_res = list(B = 30),
  boot_mul = NULL
)

# This returns everything but boot_mul, since we didn't run it in the original
# original maars_lm model
get_summary(
  mod_fit = comp_var1, sand = TRUE,
  boot_emp = TRUE, boot_res = TRUE, boot_mul = FALSE,
  well_specified = TRUE
)
}
}
