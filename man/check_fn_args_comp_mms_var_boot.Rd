% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ols-var.R
\name{check_fn_args_comp_mms_var_boot}
\alias{check_fn_args_comp_mms_var_boot}
\title{Assertion Checks for all \code{\link{comp_mms_var}} function bootstrap function inputs}
\usage{
check_fn_args_comp_mms_var_boot(boot_emp, boot_res, boot_mul)
}
\arguments{
\item{boot_emp}{(list) In the case of empirical bootstrap the expected input
is of the form #'   \code{list(B = 10, m = 100)}. Here the named
element \code{m} is optional e.g. \code{list(B = 10)} is valid, or passed
in as an explicit \code{NULL} e.g. \code{list(B = 10, m = NULL)}.
Note that technically \code{B, m} should both be positive integers,
but this assertion checking is handled explicitly in the
\code{\link{comp_boot_emp}} function. So although passing
in \code{list(B = -15, m = -20)} will pass this function without errors,
these will be addressed explicitly in \code{\link{comp_boot_emp}} as
invalid inputs.}

\item{boot_res}{(list) : In the case of residual bootstrap the expected
input is of the form \code{list(B = 10)}. Note that technically \code{B}
should be a positive integer, but this assertion checking is handled
explicitly in the \code{\link{comp_boot_res}} function. So although passing
in \code{list(B = -15)} will pass this function without errors,
these will be addressed explicitly in \code{\link{comp_boot_res}} as
invalid inputs.}

\item{boot_mul}{(list) : In the case of multiplier bootstrap the expected
input is of the form \code{list(B = 10, weights_type = "rademacher")}.
Here the named element \code{weights_type} is optional
e.g. \code{list(B = 10)} is valid, or passed in as an explicit \code{NULL}
e.g. \code{list(B = 10, weights_type = NULL)}.
Note that technically \code{B} should be a positive integer, and
\code{weights_type} should be a character vector
(see \code{\link{comp_boot_mul}}), but this assertion checking is handled
explicitly in the \code{\link{comp_boot_mul}} function. So although passing
in \code{list(B = -15, m = "test")} will pass this function without errors,
these will be addressed explicitly in \code{\link{comp_boot_mul}} as
invalid inputs.}
}
\value{
A summary statistics tibble for the bootstrap input.

: A \code{TRUE} if assertions pass, or an error if there is an
assertion failure.
}
\description{
\code{check_fn_args_comp_mms_var_boot} is used to assess whether the arguments
are correctly specified in \code{list} format and returns an error message if
they do not match the correct specification
}
\examples{
\dontrun{
# Expect all assertions to pass
check_fn_args_comp_mms_var_boot(boot_emp = list(B = 1e4, m = 600),
                            boot_res = NULL,
                            boot_mul = NULL)
}
}
\keyword{internal}
